using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Threading;
using DemoClient.Controllers;
using DevExpress.Utils;
using DevExpress.XtraEditors;
using DevExpress.XtraEditors.Repository;
using DevExpress.XtraEditors.Controls;

namespace DemoClient.View.HLP
{
    public partial class testpage : DemoClient.Controllers.BaseForm
    {
        private Thread _thread;
        public testpage()
        {
            

            // setting the editor's selection depending upon the button's visibility 


            InitializeComponent();

            DataTable _dt01 = new DataTable();
            //// 이용자구분(검색)
            _dt01 = base.GetDataTable("CHP_AJAX_CODEHELPER", "Common", "A09", "", "", "", "");
            base.SetListItem(comboBox1, _dt01, "TOTAL_CODE", "CODE_NAME", true);

            FillComboBox(_dt01);

            //// 부서(검색)
            DataTable _dt02 = new DataTable();
            _dt02 = base.GetDataTable("CHP_AJAX_CODEHELPER", "Common", "A10", "", "", "", "");
            base.SetListItem(comboBox2, _dt02, "TOTAL_CODE", "CODE_NAME", true);
            String getenc = "server=10.0.0.10;uid=banana;pwd=bananabanana;database=banana;MultipleActiveResultSets=True;";
            textBox3.Text = base.GetEncryptTripleDES(getenc);

            //dateTimePicker2
            //string encconnect = "server = 192.168.120.174,1433; uid = BANANA; pwd = bananabanana; database = banana; MultipleActiveResultSets = True;";
            //string decconnect = base.GetEncryptTripleDES(encconnect);
            //textBox1.Text = base.GetEncryptTripleDES(encconnect);
            //textBox2.Text = base.GetDecryptTripleDES("u7zXXHQBUqnjZ7ZW6VuX/UGno/P5yA/tqIYLAY5h/vA=");



            //gridproperty.gridsetpro(gridView1);


            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            //sqlDataSource1.Fill();
        }

        private void dateEdit1_EditValueChanged(object sender, EventArgs e)
        {

        }

        #region _btnSearch_Click : 검색 버튼 클릭 이벤트
        /// <summary>
        /// 검색 버튼 클릭 이벤트
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void button1_Click(object sender, EventArgs e)
        {
            // 스톱와치 시작
            base.MainForm.StartStopWatch();
            // 커서 기다림
            base.SetWaitCursor();
            // 컨트롤 비활성화


            _thread = new Thread(new ThreadStart(SearchThread));
            _thread.Start();
        }

        /// <summary>
        /// 검색 쓰레드
        /// </summary>
        void SearchThread()
        {
            try
            {
                int res = Search();
                string message = string.Format("{0:N0}건이 검색되었습니다.", res);

                // 상태표시줄 업데이트
                base.MainForm.UpdateStatus(message);
            }
            catch (Exception err)
            {
                MessageBox.Show(err.Message);
            }
            finally
            {

                // 스톱와치 중지
                base.MainForm.StopStopWatch();
                // 커서 복원
                base.RestoreCursor();
            }
        }

        /// <summary>
        /// 실제 검색을 수행하는 함수이다.
        /// 작업표시줄 상태 메시지를 업데이트 하지 않기 때문에, 삭제 후 혹은 수정 후 등에 사용하면 된다.
        /// </summary>
        /// <returns></returns>
        int Search()
        {
            int _retValue = -1;
            
            try
            {

                DataTable _dt = new DataTable();
                _dt = base.GetDataTable("PCSP_BAS0500_R1"
                    , ""//_txtMAIN_CODE_S.Text
                    , ""//_txtCODE_NAME_S.Text
                    );
                if (gridControl1.InvokeRequired)
                {
                    gridControl1.Invoke(new Action(() => gridControl1.DataSource = _dt));
                }
                else
                {
                    gridControl1.DataSource = _dt;
                }
                _retValue = _dt.Rows.Count;
            }
            catch
            {
                throw;
            }

            return _retValue;
        }
        #endregion

        public void FillComboBox(DataTable dt)
        {

            foreach (DataRow Row in dt.Rows)
            {

                comboBoxEdit1.Properties.Items.Add(Row["CODE_NAME"]);

            }

            comboBoxEdit1.Properties.Sorted = true;

        }

        public void FillLOOKUP(DataTable dt)
        {
            LookUpEdit lookUpEdit = new LookUpEdit();
            
            lookUpEdit.Properties.ValueMember = "MAIN_CODE";

            lookUpEdit.Properties.DisplayMember = "CODE_NAME";

            lookUpEdit.Properties.DataSource = dt;
            
            //lookUpEdit.EditValue = "B";
        }
    }
}
